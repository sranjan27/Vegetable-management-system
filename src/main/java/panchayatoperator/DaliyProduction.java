/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package panchayatoperator;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.Thread.sleep;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import vegetabletrading.ParabitDB;

/**
 *
 * @author HARSHIT
 */
public class DaliyProduction extends javax.swing.JDialog {

    ParabitDB db1;
    ParabitDB db2;
    ParabitDB db3; 
    PBThread pb;
    
    
    int id = 0;
    String pathimg1,pathimg2,pathimg3,pathimg4,poid,pcode,vegid,scode;
    
    /**
     * Creates new form DaliyProduction
     */
    public DaliyProduction(java.awt.Frame parent, boolean modal, String a, String b) {
        super(parent, modal);
        initComponents();
        poid = a;
        pcode = b;
        
        //for vegetable name
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT Name FROM productlist ORDER BY Name;");
            //db3.rs.next();
            while(db3.rs.next())
            {
                dpvegname.addItem(db3.rs.getString(1));
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for hindi name
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT HName FROM productlist ORDER BY HName;");
            //db3.rs.next();
            while(db3.rs.next())
            {
                dphindiname.addItem(db3.rs.getString(1));
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for vegetable regional name
        db1 = new ParabitDB();
        try
        {
            db1.rs = db1.stm.executeQuery("SELECT RName FROM productlist ORDER BY RName;");
           // db1.rs.next();
            while(db1.rs.next())
            {
                dpregionalname.addItem(db1.rs.getString(1));
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for vegetable colour
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT Colour FROM productlist ORDER BY Colour;");
            //db3.rs.next();
            while(db3.rs.next())
            {
                dpvegcolour.addItem(db3.rs.getString(1));
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //to get employee post state code
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("select StateCode from employee where PostingID = "+pcode);
            while(db3.rs.next())
            {
                scode = db3.rs.getString(1);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
    }
    
    class PBThread extends Thread
    {
        JProgressBar pbar;
        
        PBThread(JProgressBar pbar)
        {
            pbar = dpprogressbar;
        }
        
        public void run()
        {
            int min = 0;
            int max = 50;
            
            dpprogressbar.setMaximum(min);
            dpprogressbar.setMaximum(max);
            dpprogressbar.setValue(0);
            
            for(int i = min; i<max; i++)
            {
                dpprogressbar.setValue(i);
                try {
                    sleep(30);
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dpexprate = new javax.swing.JTextField();
        dpfarid = new javax.swing.JTextField();
        dpquantity = new javax.swing.JTextField();
        dpvegname = new javax.swing.JComboBox<>();
        dphindiname = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dpvegimage = new javax.swing.JLabel();
        dpvegcat = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        dpvegcolour = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        dpvegorganic = new javax.swing.JRadioButton();
        dpveginorganic = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        dpquarat = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        dpprodimg1 = new javax.swing.JButton();
        dpprodimg2 = new javax.swing.JButton();
        dpprodimg3 = new javax.swing.JButton();
        dpprodimg4 = new javax.swing.JButton();
        dpprogressbar = new javax.swing.JProgressBar();
        dpsubreg = new javax.swing.JButton();
        dpid = new javax.swing.JLabel();
        dpvegid = new javax.swing.JLabel();
        dpregionalname = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Daily Production");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel1.setText(" DAILY PRODUCTION ");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Farmer ID");

        jLabel4.setText("Vegetable Name");

        jLabel5.setText("Hindi Name");

        jLabel6.setText("Regional Name");

        jLabel7.setText("Quantity");

        dpfarid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpfaridActionPerformed(evt);
            }
        });

        dpvegname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Vegetable Name" }));
        dpvegname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpvegnameActionPerformed(evt);
            }
        });

        dphindiname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Hindi Name" }));
        dphindiname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dphindinameActionPerformed(evt);
            }
        });

        jLabel8.setText("Expected Rate");

        jLabel9.setText("Vegetable Category");

        dpvegimage.setText("            Image");
        dpvegimage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        dpvegcat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("Vegetable Colour");

        dpvegcolour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Colour" }));

        jLabel12.setText("Vegetable Type");

        buttonGroup1.add(dpvegorganic);
        dpvegorganic.setText("Organic");

        buttonGroup1.add(dpveginorganic);
        dpveginorganic.setText("Inorganic");

        jLabel13.setText("Quatily / Rating");

        dpquarat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));

        jLabel14.setText("Product Image : ");

        dpprodimg1.setText("Upload");
        dpprodimg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpprodimg1ActionPerformed(evt);
            }
        });

        dpprodimg2.setText("Upload");
        dpprodimg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpprodimg2ActionPerformed(evt);
            }
        });

        dpprodimg3.setText("Upload");
        dpprodimg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpprodimg3ActionPerformed(evt);
            }
        });

        dpprodimg4.setText("Upload");
        dpprodimg4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpprodimg4ActionPerformed(evt);
            }
        });

        dpsubreg.setText("Submit / Register");
        dpsubreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpsubregActionPerformed(evt);
            }
        });

        dpid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        dpvegid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        dpregionalname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Regional Name" }));
        dpregionalname.setMaximumSize(new java.awt.Dimension(180, 32767));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(418, 418, 418)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dpprodimg1)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addComponent(dpfarid, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(dpprogressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(dpprodimg2)
                                                        .addGap(45, 45, 45)
                                                        .addComponent(dpprodimg3)
                                                        .addGap(45, 45, 45)
                                                        .addComponent(dpprodimg4))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(190, 190, 190)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dpvegname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dpquantity)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(dpvegorganic, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(dpveginorganic, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dpexprate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dphindiname, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dpvegcat, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dpvegid, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(dpid, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dpvegimage, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpvegcolour, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dpquarat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dpsubreg)
                    .addComponent(dpregionalname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dpid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(dpfarid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(dpvegid, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dpvegimage, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(dpvegname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dphindiname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(dpregionalname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpvegcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpvegcolour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9)
                    .addComponent(dpvegorganic)
                    .addComponent(dpveginorganic))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dpquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(dpexprate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(dpquarat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(dpprogressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpprodimg1)
                    .addComponent(dpprodimg2)
                    .addComponent(dpprodimg3)
                    .addComponent(dpprodimg4)
                    .addComponent(dpsubreg))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dpfaridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpfaridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dpfaridActionPerformed

    private void dpsubregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpsubregActionPerformed

        String s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,dpvegtype="";
        
        s1 =  vegid;
        s2 = dpfarid.getText();
        s3 = (String)dpvegname.getSelectedItem();
        s4 = (String)dphindiname.getSelectedItem();
        s5 = (String)dpregionalname.getSelectedItem();
        
        if(dpvegorganic.isSelected())
        {
            dpvegtype = "Organic";
        }
        if(dpveginorganic.isSelected())
        {
            dpvegtype = "Inorganic";
        }
        s6 = dpvegtype ;
        s7 = (String)dpvegcat.getSelectedItem();
        s8 = (String)dpvegcolour.getSelectedItem();
        s9 = dpquantity.getText();
        s10 = dpexprate.getText();
        s11 = (String)dpquarat.getSelectedItem();
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");  
        LocalDateTime date = LocalDateTime.now();
        LocalTime time = LocalTime.now();
        s12 = (dtf.format(date));
        s13 = time.toString();
                    
        String qdp = "insert into dp"+scode+" (VegID, FID, VName, HName, RName, VegType, VegCategory, VegColour, Quantity, ExpRate, QuaRating, Image1, Image2, Image3, Image4, RegDate, RegTime, POID, PCode) values('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"','"+s7+"','"+s8+"','"+s9+"','"+s10+"','"+s11+"',?"+",?"+",?"+",?,'"+s12+"','"+s13+"','"+poid+"','"+pcode+"')";
        System.out.println(qdp);
        
        db1 = new ParabitDB();
        try
        {
            db1.pst = db1.con.prepareStatement(qdp);
            
            InputStream img1 = new FileInputStream(pathimg1);
            InputStream img2 = new FileInputStream(pathimg2);
            InputStream img3 = new FileInputStream(pathimg3);
            InputStream img4 = new FileInputStream(pathimg4);
                        
            db1.pst.setBlob(1, img1);
            db1.pst.setBlob(2, img2);
            db1.pst.setBlob(3, img3);
            db1.pst.setBlob(4, img4);
                    
            db1.pst.executeUpdate();
            
            
        }catch(Exception e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"Fill All The Details...");
        }
        
        // To get value of fid from database
        db2 = new ParabitDB();
        try
        {
            db2.rs = db2.stm.executeQuery("select DPID from dp"+scode+" where VegID = "+ s1 +" and FID = "+ s2);
           
              db2.rs.next();
              id = db2.rs.getInt(1);
                  
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        dpid.setText("Daily Production Id : "+id);
        
        try {
            sleep(100);
        }catch (Exception e) {
            System.out.println(e);
        }
        
        
        JOptionPane.showMessageDialog(this,"Registered Successfully!!!");
        

        // TODO add your handling code here:
    }//GEN-LAST:event_dpsubregActionPerformed

    private void dpprodimg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpprodimg1ActionPerformed

        String path1 = null;
       
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path1 = f.getAbsolutePath();
        pathimg1 = path1;
        //System.out.println(path1);
        try {
            BufferedImage bi = ImageIO.read(new File(path1));
            Image img = bi.getScaledInstance(134, 172, Image.SCALE_SMOOTH );
            ImageIcon icon = new ImageIcon(img);
            //farphoto.setIcon(icon);
            
        } catch (IOException ex) {
            //Logger.getLogger(FarmerReg.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        pb = new PBThread(dpprogressbar);
        pb.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_dpprodimg1ActionPerformed

    private void dpprodimg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpprodimg2ActionPerformed

        String path2 = null;
       
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path2 = f.getAbsolutePath();
        pathimg2 = path2;
        //System.out.println(path2);
        try {
            BufferedImage bi = ImageIO.read(new File(path2));
            Image img = bi.getScaledInstance(134, 172, Image.SCALE_SMOOTH );
            ImageIcon icon = new ImageIcon(img);
            //farphoto.setIcon(icon);
            
        } catch (IOException ex) {
            //Logger.getLogger(FarmerReg.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        pb = new PBThread(dpprogressbar);
        pb.start();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_dpprodimg2ActionPerformed

    private void dpprodimg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpprodimg3ActionPerformed

        String path3 = null;
       
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path3 = f.getAbsolutePath();
        pathimg3 = path3;
        //System.out.println(path3);
        try {
            BufferedImage bi = ImageIO.read(new File(path3));
            Image img = bi.getScaledInstance(134, 172, Image.SCALE_SMOOTH );
            ImageIcon icon = new ImageIcon(img);
            //farphoto.setIcon(icon);
            
        } catch (IOException ex) {
            //Logger.getLogger(FarmerReg.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        pb = new PBThread(dpprogressbar);
        pb.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_dpprodimg3ActionPerformed

    private void dpprodimg4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpprodimg4ActionPerformed

        String path4 = null;
       
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path4 = f.getAbsolutePath();
        pathimg4 = path4;
        //System.out.println(path4);
        try {
            BufferedImage bi = ImageIO.read(new File(path4));
            Image img = bi.getScaledInstance(134, 172, Image.SCALE_SMOOTH );
            ImageIcon icon = new ImageIcon(img);
            //farphoto.setIcon(icon);
            
        } catch (IOException ex) {
            //Logger.getLogger(FarmerReg.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        pb = new PBThread(dpprogressbar);
        pb.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_dpprodimg4ActionPerformed

    private void dpvegnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpvegnameActionPerformed

        db3 = new ParabitDB();
        String name = (String)dpvegname.getSelectedItem();
        String qimg = "SELECT Image FROM productlist WHERE name = '"+name+"'";
            
        try{
          
            db3.rs = db3.stm.executeQuery(qimg);
            db3.rs.next();
            BufferedImage bi = ImageIO.read(db3.rs.getBinaryStream("Image"));
            Image img = bi.getScaledInstance(125, 125, Image.SCALE_SMOOTH );
            dpvegimage.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            System.out.println(e);
        }
        
        //for hindi name
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT HName FROM productlist WHERE name = '"+name+"'");
                        
            while(db3.rs.next())
            {
                String hname = db3.rs.getString(1);
                dphindiname.setSelectedItem(hname);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
         //for vegetable regional name
        db1 = new ParabitDB();
        try
        {
            String q = "SELECT RName FROM productlist WHERE name = '"+name+"'";
            db1.rs = db1.stm.executeQuery(q);
                      
            while(db1.rs.next())
            {
                String rname = db1.rs.getString(1);
                dpregionalname.setSelectedItem(rname);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for Veg Id
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT SNo FROM productlist WHERE name = '"+name+"'");
                        
            while(db3.rs.next())
            {
                 vegid = db3.rs.getString(1);
                dpvegid.setText("Vegetable ID: "+vegid);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_dpvegnameActionPerformed

    private void dphindinameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dphindinameActionPerformed

        db3 = new ParabitDB();
        String hname = (String)dphindiname.getSelectedItem();
        String qimg = "SELECT Image FROM productlist WHERE HName = '"+hname+"'";
            
        try {
          
            db3.rs = db3.stm.executeQuery(qimg);
            db3.rs.next();
            BufferedImage bi = ImageIO.read(db3.rs.getBinaryStream("Image"));
            Image img = bi.getScaledInstance(125, 125, Image.SCALE_SMOOTH );
            dpvegimage.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            System.out.println(e);
        }     
        
        //for vegetable name
        db3 = new ParabitDB();
        try
        {
            db3.rs = db3.stm.executeQuery("SELECT Name FROM productlist WHERE HName = '"+hname+"'");
            //db3.rs.next();
            while(db3.rs.next())
            {
                String vname = db3.rs.getString(1);
                dpvegname.setSelectedItem(vname);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for vegetable regional name
        /*db1 = new ParabitDB();
        try
        {
            db1.rs = db1.stm.executeQuery("SELECT RName FROM productlist WHERE HName = '"+hname+"'");
           // db1.rs.next();
            while(db1.rs.next())
            {
                String rname = db3.rs.getString(1);
                dpregionalname.setSelectedItem(rname);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        //for Veg Id
        db3 = new ParabitDB();
        try
        {
             db3.rs = db3.stm.executeQuery("SELECT SNo FROM productlist WHERE HName = '"+hname+"'");
            while(db3.rs.next())
            {
                String vegid = db3.rs.getString(1);
                dpvegid.setText("Vegetable ID: "+vegid);
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }*/

        // TODO add your handling code here:
    }//GEN-LAST:event_dphindinameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaliyProduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaliyProduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaliyProduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaliyProduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String a = null;
                String b = null;
                DaliyProduction dialog = new DaliyProduction(new javax.swing.JFrame(), true,a,b);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField dpexprate;
    private javax.swing.JTextField dpfarid;
    private javax.swing.JComboBox<String> dphindiname;
    private javax.swing.JLabel dpid;
    private javax.swing.JButton dpprodimg1;
    private javax.swing.JButton dpprodimg2;
    private javax.swing.JButton dpprodimg3;
    private javax.swing.JButton dpprodimg4;
    private javax.swing.JProgressBar dpprogressbar;
    private javax.swing.JTextField dpquantity;
    private javax.swing.JComboBox<String> dpquarat;
    private javax.swing.JComboBox<String> dpregionalname;
    private javax.swing.JButton dpsubreg;
    private javax.swing.JComboBox<String> dpvegcat;
    private javax.swing.JComboBox<String> dpvegcolour;
    private javax.swing.JLabel dpvegid;
    private javax.swing.JLabel dpvegimage;
    private javax.swing.JRadioButton dpveginorganic;
    private javax.swing.JComboBox<String> dpvegname;
    private javax.swing.JRadioButton dpvegorganic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
